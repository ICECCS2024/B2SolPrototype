THEORY BalanceX IS
  B_weth_i,246,28,0,191,0,0,0;
  ValuesLemmas,0,0,0,0,0,0,0;
  InstanciatedConstraintsLemmas,0,0,0,0,0,0,0;
  Initialisation,8,0,0,8,0,0,0;
  deposit,49,18,0,31,0,0,0;
  withdraw,20,2,0,18,0,0,0;
  transferTo,21,1,0,20,0,0,0;
  approve,2,0,0,2,0,0,0;
  transferFrom,32,6,0,26,0,0,0;
  rewardTopDepositors,114,1,0,86,0,0,0
END
&
THEORY ProofState IS
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Proved(0);
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Proved(0);
  Proved(0);
  Unproved;
  Proved(0);
  Unproved;
  Proved(0);
  Unproved;
  Unproved;
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Unproved;
  Proved(0);
  Proved(0);
  Unproved;
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(Util);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0);
  Proved(0)
END
&
THEORY MethodList IS
  pr;
  pr;
  pr;
  ?;
  ?;
  ?;
  ?;
  ?;
  ?;
  pr;
  pr;
  ?;
  ?;
  ?;
  pr;
  pr;
  ?;
  ?;
  pr;
  ?;
  pr;
  pr;
  pr;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  ?;
  ?;
  ?;
  ?;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  pr;
  pr;
  ?;
  pr;
  ?;
  pr;
  ?;
  ?;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  ?;
  pr;
  pr;
  ?;
  pr;
  pr;
  pp(rp.1 | 62);
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(allowanceOf$1(sender)(msg_sender)-amount<=allowanceOf$1(sender)(msg_sender)) & ss & pr & dd & ah(allowanceOf$1(sender)(msg_sender)<=2147483647) & pr & ah(allowanceOf$1(sender)(msg_sender): NAT) & ss & pr & pr & pr & fh(not(not(sender = recipient) & amount<=allowanceOf$1(sender)(msg_sender) & amount<=accountOf$1(sender) & (accountOf$1(recipient)+amount: INTEGER & 0<=accountOf$1(recipient)+amount & accountOf$1(recipient)+amount<=2147483647) & (allowanceOf$1(sender)(msg_sender)-amount: INTEGER & 0<=allowanceOf$1(sender)(msg_sender)-amount & allowanceOf$1(sender)(msg_sender)-amount<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr & pr & ah(allowanceOf$1(sender)(msg_sender)-amount<=allowanceOf$1(sender)(msg_sender));
  dd & fh(not(not(sender = recipient) & amount<=allowanceOf$1(sender)(msg_sender) & amount<=accountOf$1(sender) & (accountOf$1(recipient)+amount: INTEGER & 0<=accountOf$1(recipient)+amount & accountOf$1(recipient)+amount<=2147483647) & (allowanceOf$1(sender)(msg_sender)-amount: INTEGER & 0<=allowanceOf$1(sender)(msg_sender)-amount & allowanceOf$1(sender)(msg_sender)-amount<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr & pr & ah(allowanceOf$1(sender)(msg_sender)-amount<=allowanceOf$1(sender)(msg_sender)) & pr & dd & ah(allowanceOf$1(sender)(msg_sender): NAT) & ah(ran(allowanceOf$1(sender)) <: NAT) & pr & pr & pr;
  dd & ar(SimplifyRelOveXY.9,Goal) & ah({sender|->accountOf$1(sender)-amount}<+{recipient|->accountOf$1(recipient)+amount} = {recipient|->accountOf$1(recipient)+amount,sender|->accountOf$1(sender)-amount}) & ss & pr & dd & eh({sender|->accountOf$1(sender)-amount}<+{recipient|->accountOf$1(recipient)+amount},{recipient|->accountOf$1(recipient)+amount,sender|->accountOf$1(sender)-amount},Goal) & ss & pr;
  pr;
  pr;
  pr;
  dd & ah(allowanceOf$1(sender)(msg_sender)-amount<=allowanceOf$1(sender)(msg_sender)) & ss & pr & dd & pr & ah(allowanceOf$1(sender)(msg_sender): NAT) & ss & pr & pr;
  pr & pp(rp.1 | 62);
  pr;
  dd & ah(allowanceOf$1(sender)(msg_sender)-amount<=allowanceOf$1(sender)(msg_sender)) & ss & pr & dd & ah(allowanceOf$1(sender)(msg_sender)<=2147483647) & pr & ah(allowanceOf$1(sender)(msg_sender): NAT) & ss & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & fh(not(amount+1<=accountOf$1(msg_sender) & not(msg_sender = dst) & (accountOf$1(dst)+amount: INTEGER & 0<=accountOf$1(dst)+amount & accountOf$1(dst)+amount<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & fh(not(amount<=accountOf$1(msg_sender) & (balanceOf$1(msg_sender)+amount: INTEGER & 0<=balanceOf$1(msg_sender)+amount & balanceOf$1(msg_sender)+amount<=2147483647) & (balanceOf$1(THIS)-amount: INTEGER & 0<=balanceOf$1(THIS)-amount & balanceOf$1(THIS)-amount<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr;
  dd & fh(not(amount<=accountOf$1(msg_sender) & (balanceOf$1(msg_sender)+amount: INTEGER & 0<=balanceOf$1(msg_sender)+amount & balanceOf$1(msg_sender)+amount<=2147483647) & (balanceOf$1(THIS)-amount: INTEGER & 0<=balanceOf$1(THIS)-amount & balanceOf$1(THIS)-amount<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & ah(index$1+1-1 = index$1) & ss & pr & dd & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & ss & pr & pr & dd & ah((0..index$1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh(depositors_i$1[0..index$1-1],depositors,Goal) & ah(card({msg_sender}) = 1) & ss & pr;
  dd & ah(index$1+1-1 = index$1) & ss & pr & dd & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & ss & pr & pr & dd & ah((0..index$1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh(depositors_i$1[0..index$1-1],depositors,Goal) & ah(card({msg_sender}) = 1) & ss & pr;
  pr;
  dd & ah(index$1+1-1 = index$1) & ss & pr & dd & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & ss & pr & pr & dd & ah((0..index$1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh(depositors_i$1[0..index$1-1],depositors,Goal) & ah(card({msg_sender}) = 1) & ss & pr;
  pr;
  pr;
  pr;
  dd & ah(index$1+1-1 = index$1) & ss & pr & dd & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & ss & pr & pr & dd & ah((0..index$1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh(depositors_i$1[0..index$1-1],depositors,Goal) & ah(card({msg_sender}) = 1) & ss & pr;
  dd & ah(index$1+1-1 = index$1) & ss & pr & dd & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & ss & pr & pr & dd & ah((0..index$1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh(depositors_i$1[0..index$1-1],depositors,Goal) & ah(card({msg_sender}) = 1) & ss & pr;
  pr;
  dd & ah(index$1+1-1 = index$1) & ss & pr & dd & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & ss & pr & pr & dd & ah((0..index$1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh(depositors_i$1[0..index$1-1],depositors,Goal) & ah(card({msg_sender}) = 1) & ss & pr;
  dd & fh(not(balanceOf$1(msg_sender)-msg_value: INTEGER & 0<=balanceOf$1(msg_sender)-msg_value & balanceOf$1(msg_sender)-msg_value<=2147483647 & (accountOf$1(msg_sender)+msg_value: INTEGER & 0<=accountOf$1(msg_sender)+msg_value & accountOf$1(msg_sender)+msg_value<=2147483647) & (balanceOf$1(THIS)+msg_value: INTEGER & 0<=balanceOf$1(THIS)+msg_value & balanceOf$1(THIS)+msg_value<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr & pr & pr;
  dd & fh(not(balanceOf$1(msg_sender)-msg_value: INTEGER & 0<=balanceOf$1(msg_sender)-msg_value & balanceOf$1(msg_sender)-msg_value<=2147483647 & (accountOf$1(msg_sender)+msg_value: INTEGER & 0<=accountOf$1(msg_sender)+msg_value & accountOf$1(msg_sender)+msg_value<=2147483647) & (balanceOf$1(THIS)+msg_value: INTEGER & 0<=balanceOf$1(THIS)+msg_value & balanceOf$1(THIS)+msg_value<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr & pr & pr;
  dd & ah(depositedOver_100$1(msg_sender): {TRUE,FALSE}) & pr & dd & fh(not(threshold_i<=accountOf$1(msg_sender)+msg_value & depositedOver_100$1(msg_sender) = FALSE & index$1+1<=threshold_i)) & ar(NegationXY.6,Once) & pr & ct & fh(not(msg_sender: depositors)) & ss & pr & pr;
  dd & ar(SimplifyRelImaXY.32,Goal) & ah(dom({index$1|->msg_sender}) = {index$1}) & ss & pr & dd & eh(dom({index$1|->msg_sender}),{index$1},Goal) & ar(SimplifyRelImaXY.25,Goal) & ah({index$1|->msg_sender}[0..index$1+1-1] = {msg_sender}) & ss & ah(index$1: 0..index$1) & pr & dd & pr & dd & eh({index$1|->msg_sender}[0..index$1+1-1],{msg_sender},Goal) & ah((0..index$1+1-1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh((0..index$1+1-1)-{index$1},0..index$1-1,Goal) & ar(SimplifyRelInvXY.5,Goal) & ah(dom({msg_sender|->TRUE}) = {msg_sender}) & ss & pr & dd & eh(dom({msg_sender|->TRUE}),{msg_sender},Goal) & ss & ar(SimplifyRelImaLongXY.5,Goal) & ss & eh(depositedOver_100$1~[{TRUE}],depositors,Goal) & eh(depositors,depositors_i$1[0..index$1-1],Goal) & ss & pr;
  pr;
  dd & ah(index$1+1-1 = index$1) & pr & dd & eh(index$1+1-1,index$1,Goal) & ar(SimplifyRelImaXY.32,Goal) & ah(index$1: 0..index$1) & pr & dd & ss & ah(depositors_i$1[0..index$1-1] = depositors) & ss & dd & eh(depositors_i$1[0.. -1+index$1],depositors,Goal) & ah({msg_sender|->index$1}|>0..index$1 = {msg_sender|->index$1}) & ss & pr & dd & ar(SimplifyRelRarLongXY.3,Goal) & ah({msg_sender|->index$1}|>0..index$1 = {msg_sender|->index$1}) & dd & eh({msg_sender|->index$1}|>0..index$1,{msg_sender|->index$1},Goal) & ah(0..index$1 = 0..index$1-1\/{index$1}) & ss & pr & dd & eh(0..index$1,0..index$1-1\/{index$1},Goal) & ar(SimplifyRelRarLongXY.6,Goal) & ah(depositors_i$1~|>>{index$1}|>{index$1} = {}) & ss & pr & dd & eh(depositors_i$1~|>>{index$1}|>{index$1},{},Goal) & ar(SimplifyRelRarXY.24,Goal) & ah((0..index$1-1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh((0..index$1-1)-{index$1},0..index$1-1,Goal) & ss & ar(InFunctionXY.12,Once) & ah((0..index$1-1<|depositors_i$1)~: depositors +-> 0..index$1-1) & ss & ah((0..index$1-1<|depositors_i$1)~ = depositors_i$1~|>0.. -1+index$1) & ss & pr & dd & eh((0..index$1-1<|depositors_i$1)~,depositors_i$1~|>0.. -1+index$1,Hyp((0..index$1-1<|depositors_i$1)~: depositors +-> 0..index$1-1)) & dd & ar(InFunctionXY.1,Once) & ss & pr & pr & pr & ss & ah(depositors_i$1[0.. -1+index$1]<|{msg_sender|->index$1} = {}) & eh(depositors_i$1[0.. -1+index$1],depositors,Goal) & pr & ct & eh(depositors,depositedOver_100$1~[{TRUE}],Hyp(msg_sender: depositors)) & dd & ah(depositedOver_100$1(msg_sender) = TRUE) & ar(b1.34,Once) & eh(depositedOver_100$1(msg_sender),FALSE,Goal) & pr & dd & eh(depositors_i$1[0.. -1+index$1]<|{msg_sender|->index$1},{},Goal) & pr & eh(depositors_i$1[0.. -1+index$1],depositors,Goal) & ct & eh(depositors,depositedOver_100$1~[{TRUE}],Hyp(msg_sender: depositors)) & dd & ah(depositedOver_100$1(msg_sender) = TRUE) & ar(b1.34,Once) & eh(depositedOver_100$1(msg_sender),FALSE,Goal) & pr;
  dd & ah(index$1+1-1 = index$1) & pr & dd & eh(index$1+1-1,index$1,Goal) & ar(SimplifyRelImaXY.32,Goal) & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & pr & pr & dd & eh({index$1|->msg_sender}[0..index$1],{msg_sender},Goal) & ah(dom({index$1|->msg_sender}) = {index$1}) & pr & dd & eh(dom({index$1|->msg_sender}),{index$1},Goal) & ar(SimplifyRelDorLongXY.1,Goal) & ss & ah(0..index$1<|{index$1|->msg_sender} = {index$1|->msg_sender}) & ah(index$1: 0..index$1) & pr & dd & ss & pr & dd & eh(0..index$1<|{index$1|->msg_sender},{index$1|->msg_sender},Goal) & ar(InFunctionXY.14,Once) & ss & pr & pr;
  dd & ah(index$1+1-1 = index$1) & ss & pr & dd & eh(index$1+1-1,index$1,Goal) & ar(SimplifyRelImaXY.32,Goal) & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & ss & pr & pr & dd & eh({index$1|->msg_sender}[0..index$1],{msg_sender},Goal) & ar(SimplifyRelDomXY.21,Goal) & ar(SimplifyRelImaXY.25,Goal) & ah((0..index$1)-{index$1} = 0..index$1-1) & ss & pr & dd & eh((0..index$1)-{index$1},0..index$1-1,Goal) & eh(depositors_i$1[0..index$1-1],depositors,Goal) & ar(SimplifyEnsCard.8,Goal) & ah(card({msg_sender}) = 1) & ss & pr & dd & eh(card({msg_sender}),1,Goal) & ah(card(depositors/\{msg_sender}) = 0) & ah(depositors/\{msg_sender} = {}) & ss & ct & eh(depositors,depositedOver_100$1~[{TRUE}],Hyp(msg_sender: depositors)) & dd & ah(depositedOver_100$1(msg_sender) = TRUE) & ar(b1.34,Once) & eh(depositedOver_100$1(msg_sender),FALSE,Goal) & ss & pr & dd & pr & dd & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  dd & fh(not(balanceOf$1(msg_sender)-msg_value: INTEGER & 0<=balanceOf$1(msg_sender)-msg_value & balanceOf$1(msg_sender)-msg_value<=2147483647 & (accountOf$1(msg_sender)+msg_value: INTEGER & 0<=accountOf$1(msg_sender)+msg_value & accountOf$1(msg_sender)+msg_value<=2147483647) & (balanceOf$1(THIS)+msg_value: INTEGER & 0<=balanceOf$1(THIS)+msg_value & balanceOf$1(THIS)+msg_value<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr & pr & pr;
  dd & fh(not(balanceOf$1(msg_sender)-msg_value: INTEGER & 0<=balanceOf$1(msg_sender)-msg_value & balanceOf$1(msg_sender)-msg_value<=2147483647 & (accountOf$1(msg_sender)+msg_value: INTEGER & 0<=accountOf$1(msg_sender)+msg_value & accountOf$1(msg_sender)+msg_value<=2147483647) & (balanceOf$1(THIS)+msg_value: INTEGER & 0<=balanceOf$1(THIS)+msg_value & balanceOf$1(THIS)+msg_value<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr & pr & pr;
  dd & fh(not(balanceOf$1(msg_sender)-msg_value: INTEGER & 0<=balanceOf$1(msg_sender)-msg_value & balanceOf$1(msg_sender)-msg_value<=2147483647 & (accountOf$1(msg_sender)+msg_value: INTEGER & 0<=accountOf$1(msg_sender)+msg_value & accountOf$1(msg_sender)+msg_value<=2147483647) & (balanceOf$1(THIS)+msg_value: INTEGER & 0<=balanceOf$1(THIS)+msg_value & balanceOf$1(THIS)+msg_value<=2147483647))) & ar(NegationXY.6,Once) & pr & pr & pr & pr & pr & pr & pr & pr & pr;
  dd & fh(not(threshold<=accountOf$1(msg_sender)+msg_value & not(msg_sender: depositors) & card(depositors)+1<=threshold)) & ar(NegationXY.6,Once) & pr & ct & eh(depositors,depositedOver_100$1~[{TRUE}],Hyp(msg_sender: depositors)) & dd & ah(depositedOver_100$1(msg_sender) = TRUE) & ar(b1.34,Once) & pr & ah(threshold = threshold_i) & pr & eh(card(depositors),index$1,Goal) & pr;
  dd & ss & ah({index$1|->msg_sender}[0..index$1] = {msg_sender}) & ah(index$1: 0..index$1) & ss & pr & dd & ss & pr & dd & eh({index$1|->msg_sender}[0..index$1],{msg_sender},Goal) & ah(depositors_i$1[0..index$1-1] = depositors) & ss & pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr;
  pr
END
&
THEORY PassList IS
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),(?;0);
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?;
  Force(0),?
END
&
THEORY ManForms 
END
&
THEORY Version IS
  POVersion("svn")(CLT == "svn")(genOPO == KO,genDivergencePO == KO,local_op == OK);
  PRVersion("svn")(CLT == "svn")
END
