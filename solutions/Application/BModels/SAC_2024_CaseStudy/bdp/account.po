THEORY ProofList IS
  _f(1) & _f(5) & _f(10) & set_accountOf.2,(_f(7) => _f(12));
  _f(1) & _f(5) & _f(10) & set_accountOf.1,(_f(7) => _f(11));
  _f(1) & _f(5) & _f(6) & set_accountOf_abstract.2,(_f(7) => _f(9));
  _f(1) & _f(5) & _f(6) & set_accountOf_abstract.1,(_f(7) => _f(8));
  _f(1) & Initialisation.2,(_f(2) => _f(4));
  _f(1) & Initialisation.1,(_f(2) => _f(3))
END
&
THEORY Formulas IS
  ("`Seen and used machines properties'" & USERS = (1..5)*{ADDRESS}-({2|->ADDRESS}\/{1|->ADDRESS}) & init_msg_sender: USERS & init_msg_value: INTEGER & 0<=init_msg_value & init_msg_value<=2147483647 & init_block_timestamp: INTEGER & 0<=init_block_timestamp & init_block_timestamp<=2147483647 & BYTES: FIN(INTEGER) & not(BYTES = {}) & (1..5)*{ADDRESS}: FIN(NATURAL*{ADDRESS}) & not((1..5)*{ADDRESS} = {}));
  "`Check that the invariant (accountOf: ADDRESS --> NAT) is established by the initialisation - ref 3.3'";
  ((1..5)*{ADDRESS}*{0}: (1..5)*{ADDRESS} +-> NAT);
  (dom((1..5)*{ADDRESS}*{0}) = (1..5)*{ADDRESS});
  ("`Component invariant'" & accountOf: (1..5)*{ADDRESS} +-> NAT & dom(accountOf) = (1..5)*{ADDRESS});
  ("`set_accountOf_abstract preconditions in this component'" & updates: (1..5)*{ADDRESS} +-> NAT);
  "`Check that the invariant (accountOf: ADDRESS --> NAT) is preserved by the operation - ref 3.4'";
  (accountOf<+updates: (1..5)*{ADDRESS} +-> NAT);
  (dom(accountOf<+updates) = (1..5)*{ADDRESS});
  ("`set_accountOf preconditions in this component'" & key: (1..5)*{ADDRESS} & value: INTEGER & 0<=value & value<=2147483647);
  (accountOf<+{key|->value}: (1..5)*{ADDRESS} +-> NAT);
  (dom(accountOf<+{key|->value}) = (1..5)*{ADDRESS})
END
&
THEORY EnumerateX IS
  ADDRESS == {addr_0,THIS,addr_1,addr_2,addr_3}
END
&
THEORY Version IS
  POVersion("svn")(CLT == "svn")(genOPO == KO, genDivergencePO == KO, local_op == OK)
END
